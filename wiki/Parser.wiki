#summary The CCTM Parser and its placeholder syntax
#sidebar SidebarFunctionReference

The CCTM relies on string parsing to do automated find-and-replace operations on formatting strings.  It converts strings such as

{{{
Hello [+first_name+], we have confirmed your trip to [+city+] on [+date+].
}}}

to something like

{{{
Hello Steve, we have confirmed your trip to New York on March 17, 2013.
}}}

*Advantages*

 * Formatting strings are easily cached.
 * They cannot crash or be hacked.
 * Since they are static strings with only limited "windows" into dynamic functionality, they are far less likely to devolve into spaghetti.

*Disadvantages*

 * They are not PHP
 * They use their own custom syntax


= Placeholders =

==Simple Placeholders==

Basic placeholders begin with a `[+` and end with a `+]`, e.g. `[+post_title+]`.  Starting in version 0.9.6.1 of the CCTM, complex placeholders were supported due to enhancements in the parser functionality.  [OutputFilters Output Filters] can referenced in the placeholders, and the syntax is similar to what is supported by the [get_custom_field get_custom_field()] and [print_custom_field print_custom_field()] functions.


==Advanced Placeholders==

Starting with version 0.9.6.1 of the CCTM, you can use advanced placeholders in your formatting tpls.

*Sample Placeholder*

`[+placeholder_name:outputfilter==option1||option2+]`