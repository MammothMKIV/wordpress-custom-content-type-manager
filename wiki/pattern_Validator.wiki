#summary Pattern Validator
#sidebar SidebarValidators

<wiki:toc max_depth="1" />

= Description =

The *Pattern* validator is used when you want to restrict input in a certain field to a pattern of letters or numbers, e.g. for phone numbers, SKUs, IP addresses and so forth.  A simple format is provided, or developer users can use [http://php.net/manual/en/function.preg-match.php regular expressions].

= Options =

 * *Pattern*: For simple patterns, specify a character for character pattern.
 * *Use  preg_match*: if checked, you must supply a valid regular expression pattern, compatible 
 * *Message*: Write a custom message here that shows when a field fails validation.  Because your pattern may be testing for vastly different things, it's necessary to offer a way to customize the error message.  You may use "%s" as a placeholder for the field name.

If you are using simple patterns (preg_match _not_ checked), then the following characters can define your pattern:

 * `#` : Matches any number (0-9)
 * `*` : Matches any letter (A-Z).  This is not case sensitive.  This does not match UTF-8 characters.
 * `?` : Matches any single character.

= Examples =

== Example 1: Phone Number (simple) ==

 * *Pattern:* `###-###-####`
 * *preg_match*: unchecked.

Note that this pattern would not allow for extensions or any other variation. `1-555-555-1212` or `(555)-555-1212` would both be considered invalid.

== Example 2: SKU (simple) ==

Some businesses use alphanumeric codes to identify products.  As long as they are always the same length, you may use a simple pattern to identify it.

== Example 3: Message (simple) ==

Sometimes, you may want users to type in a message verbatim, e.g. giving their consent for something.

== Example 4: Phone Number (advanced) ==

== Example 5: IP Address (advanced) ==

Since IP addresses are not always represented with the same length of characters, it's necessary to use a regular expression 