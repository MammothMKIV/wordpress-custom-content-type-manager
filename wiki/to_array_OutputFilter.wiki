#summary to_array Output Filter
#labels Output-Filters

<wiki:toc max_depth="1" />

= Description =

The *to_array* filter is the default output filter for [MultiSelect multi-select] fields: the raw format is a JSON string.  Selecting the "Array" output filter will convert the JSON string into a PHP array.  It is equivalent to the following:

{{{ 
$raw = get_custom_field('my_image');
$array = json_decode($raw, true);
}}}

The `print_custom_field()` function isn't useful if you have a [MultiSelect multi-select] field using the Array output filter: you can't simply print an array, you're going to have to do something with it. 

= Usage =

Generic invocation of any Output Filter occurs via the [TemplateFunctions#get_custom_field get_custom_field()] function:

_mixed_ *get_custom_field*( string _$input_ `[`, mixed _$options_ `]` ) 

 * *$input*: _mixed_.  Normally a JSON formatted string, e.g. `["dog","cat","pig"]`
 * *$options*: _none_.
 * *OUTPUT*: _array_. E.g. `array('dog','cat','pig')`

== Example 1==
{{{
<?php
$my_array = get_custom_field('my_field');
foreach ($my_array as $item) {
   print $item;
}
?>
}}}

== Example 2==

If the custom field is set to use a different default Output Filter, you can force the output to use the *to_array* filter by appending _:to_array_ to the fieldname:

{{{
<?php
$my_array = get_custom_field('my_field:to_array');
print implode(', ', $my_array);
?>
}}}

= See Also =

See also the "Format List" output filter.